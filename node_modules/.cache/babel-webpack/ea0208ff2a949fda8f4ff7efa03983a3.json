{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClient, HttpClientModule } from '@angular/common/http'; // import { AgmCoreModule } from '@agm/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { PropertiesModule } from 'src/app/pages/properties/properties.module';\nimport { HomeComponent } from './pages/home/home.component';\nimport { HeroComponent } from './pages/home/hero/hero.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nimport * as i2 from \"@angular/service-worker\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"./pages/properties/properties/properties.component\";\nimport * as i5 from \"@angular/router\"; // Factory function required during AOT compilation\n\nexport function httpTranslateLoaderFactory(http) {\n  return new TranslateHttpLoader(http);\n}\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[BrowserModule, AppRoutingModule, FormsModule, ReactiveFormsModule, PropertiesModule, HttpClientModule, TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpTranslateLoaderFactory,\n        deps: [HttpClient]\n      }\n    }), ServiceWorkerModule.register('ngsw-worker.js', {\n      // enabled: environment.production,\n      enabled: true,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    }) // AgmCoreModule.forRoot({\n    //   apiKey: ''\n    // }),\n    ]]\n  });\n  return AppModule;\n})();\ni0.ɵɵsetComponentScope(HomeComponent, [HeroComponent, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator, i3.CheckboxControlValueAccessor, i4.PropertiesComponent, i5.RouterLinkWithHref], [i1.TranslatePipe]);","map":null,"metadata":{},"sourceType":"module"}